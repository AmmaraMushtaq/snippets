{
	"PuppeteerNode": {
		"prefix": ["puppeteernode","pup","ptr"],
		"body": [
			"Puppeteerconnect (ptrconn)",
			"Puppeteer (ptrpup)",
			"Browser  (ptrbrw)",
			"BrowserContext (ptrbcon)",
			"Page (ptrpge)",
			"WebWorker (ptrwwork)",
			"Accessibility (ptracc)",
			"Keyboard (ptrkeyb)",
			"Mouse (ptrmse)",
			"Touchscreen (ptrtsc)",
			"Tracing (ptrtr)",
			"FileChooser (ptrfch)",
			"Dialog (ptrdi)",
			"ConsoleMessage (ptrconm)",
			"Frame (ptrfr)",
			"JSHandle (ptrjsh)",
			"ElementHandle (ptrele)",
			"HTTPRequest (ptrhttpr)",
			"HTTPResponse (ptrhttpres)",
			"SecurityDetails (ptrsede)",
			"Target (ptrtar)",
			"CDPSession (ptrcdse)",
			"Coverage (ptrcov)",
			"TimeoutError (ptrtime)",
			"EventEmitter (ptreve)",
			"Other (ptrot)"
		]
	},
	"PuppeteerNode.connect": {
		"prefix": ["ptrconnect","ptrconn"],
		"body": [
			
			" PuppeteerNode.connect (ptrconn)",
			" PuppeteerNode.defaultArgs (ptrdearg)",
			"PuppeteerNode.executablePath (ptrexepa)",
			"PuppeteerNode.launch (ptrlaun)",
			" PuppeteerNode.trimCache (ptrtrim)"
		]
	},
	"Puppeteer": {
		"prefix": ["ptrpuppeteer","ptrpup"],
		"body": [
			
			"Puppeteer.clearcustomqueryhandlers (ptrpupccqh)",
			"Puppeteer.connect (ptrpupconn)",
			"Puppeteer.customqueryhandlernames (ptrpupcqhn)",
			"Puppeteer.registercustomqueryhandler (ptrpuprcqh)",
			"Puppeteer.unregistercustomqueryhandler (ptrpupucqh)"
		],
		"description": "Puppeteer functions"
	},
	"Puppeteer Browser": {
		"prefix": ["ptrbrowser","ptrbrw"],
		"body": [
			
			"Browser.browserContexts (ptrbrwcon)",
			"Browser.close (ptrbrwclo)",
			"Browser.createincognitobrowsercontext (ptrbrwcibb)",
			"Browser.defaultbrowsercontext (ptrbrwdbcon)",
			"Browser.disconnect (ptrbrwdis)",
			"Browser.isconnected (ptrbrwiscon)",
			"Browser.newPage (ptrbrwnewpag)",
			"Browser.pages (ptrbrwpgs)",
			"Browser.process (ptrbrwpro)",
			"Browser.target (ptrbrwtar)",
			"Browser.targets (ptrbrwtrgts)",
			"Browser.userAgent (ptrbrwuagen)",
			"Browser.version (ptrbrwver)",
			"Browser.waitForTarget (ptrbrwwftar)",
			"Browser.wsEndpoint (ptrbrwwsepo)"
		],
		"description": "Puppeteer Browser"
	},
	"Puppeteer BrowserContext": {
		"prefix": ["ptrbrowsercontext","ptrbcon"],
		"body": [
			"BrowserContext",
			"BrowserContext.browser",
			"BrowserContext.clearPermissionOverrides",
			"BrowserContext.close",
			"BrowserContext.isIncognito",
			"BrowserContext.newPage",
			"BrowserContext.overridePermissions",
			"BrowserContext.pages",
			"BrowserContext.targets",
			"BrowserContext.waitForTarget"
		],
		"description": "Puppeteer BrowserContext"
	},
	"PuppeteerPage": {
		"prefix": ["ptrpage","ptrpge"],
		"body": [
			"Page",
			"Page.$",
			"Page.$$",
			"Page.$$eval",
			"Page.$eval",
			"Page.$x",
			"Page.addScriptTag",
			"Page.addStyleTag",
			"Page.addStyleTag_1",
			"Page.authenticate",
			"Page.bringToFront",
			"Page.browser",
			"Page.browserContext",
			"Page.click",
			"Page.close",
			"Page.content",
			"Page.cookies",
			"Page.createCDPSession",
			"Page.createPDFStream",
			"Page.deleteCookie",
			"Page.emulate",
			"Page.emulateCPUThrottling",
			"Page.emulateIdleState",
			"Page.emulateMediaFeatures",
			"Page.emulateMediaType",
			"Page.emulateNetworkConditions",
			"Page.emulateTimezone",
			"Page.emulateVisionDeficiency",
			"Page.evaluate",
			"Page.evaluateHandle",
			"Page.evaluateOnNewDocument",
			"Page.exposeFunction",
			"Page.focus",
			"Page.frames",
			"Page.getDefaultTimeout",
			"Page.goBack",
			"Page.goForward",
			"Page.goto",
			"Page.hover",
			"Page.isClosed",
			"Page.isDragInterceptionEnabled",
			"Page.isJavaScriptEnabled",
			"Page.isServiceWorkerBypassed",
			"Page.locator",
			"Page.locator_1",
			"Page.mainFrame",
			"Page.metrics",
			"Page.off",
			"Page.on",
			"Page.once",
			"Page.pdf",
			"Page.queryObjects",
			"Page.reload",
			"Page.removeExposedFunction",
			"Page.removeScriptToEvaluateOnNewDocument",
			"Page.screenshot",
			"Page.screenshot_1",
			"Page.screenshot_2",
			"Page.select",
			"Page.setBypassCSP",
			"Page.setBypassServiceWorker",
			"Page.setCacheEnabled",
			"Page.setContent",
			"Page.setCookie",
			"Page.setDefaultNavigationTimeout",
			"Page.setDefaultTimeout",
			"Page.setDragInterception",
			"Page.setExtraHTTPHeaders",
			"Page.setGeolocation",
			"Page.setJavaScriptEnabled",
			"Page.setOfflineMode",
			"Page.setRequestInterception",
			"Page.setUserAgent",
			"Page.setViewport",
			"Page.tap",
			"Page.target",
			"Page.title",
			"Page.type",
			"Page.url",
			"Page.viewport",
			"Page.waitForDevicePrompt",
			"Page.waitForFileChooser",
			"Page.waitForFrame",
			"Page.waitForFunction",
			"Page.waitForNavigation",
			"Page.waitForNetworkIdle",
			"Page.waitForRequest",
			"Page.waitForResponse",
			"Page.waitForSelector",
			"Page.waitForTimeout",
			"Page.waitForXPath",
			"Page.workers"
		],
		"description": "Puppeteer page"
	},
	"Puppeteer WebWorker": {
		"prefix": ["ptrwebworker","ptrwwork"],
		"body": [
			"WebWorker",
			"WebWorker.evaluate",
			"WebWorker.evaluateHandle",
			"WebWorker.url"
		],
		"description": "Puppeteer WebWorker"
	},
	"Puppeteer Accessibility": {
		"prefix": ["ptraccessibility","ptracc"],
		"body": [
			"Accessibility",
			"Accessibility.snapshot"
		],
		"description": "PuppeteerAccessibility"
	},
	"Puppeteer Keyboard": {
		"prefix": ["keyboard","ptrkeyb"],
		"body": [
			"Keyboard",
			"Keyboard.down",
			"Keyboard.press",
			"Keyboard.sendCharacter",
			"Keyboard.type",
			"Keyboard.up"
		],
		"description": "Puppeteer Keyboard"
	},
	"Puppeteer Mouse": {
		"prefix": ["ptrmouse","ptrmse"],
		"body": [
			"Mouse",
			"Mouse.click",
			"Mouse.down",
			"Mouse.drag",
			"Mouse.dragAndDrop",
			"Mouse.dragEnter",
			"Mouse.dragOver",
			"Mouse.drop",
			"Mouse.move",
			"Mouse.reset",
			"Mouse.up",
			"Mouse.wheel"
		],
		"description": "Puppeteer Mouse"
	},
	"Puppeteer Touchscreen": {
		"prefix": ["ptrtouchscreen","ptrtsc"],
		"body": [
			"Touchscreen",
			"Touchscreen.tap",
			"Touchscreen.touchEnd",
			"Touchscreen.touchMove",
			"Touchscreen.touchStart"
		],
		"description": "Puppeteer Touchscreen"
	},
	"Puppeteer Tracing": {
		"prefix": ["ptrtracing","ptrtr"],
		"body": [
			"Tracing",
			"Tracing.start",
			"Tracing.stop"
		],
		"description": "Puppeteer Tracing"
	},
	"Puppeteer FileChooser": {
		"prefix": ["filechooser","ptrfch"],
		"body": [
			"FileChooser",
			"FileChooser.accept",
			"FileChooser.cancel",
			"FileChooser.isMultiple"
		],
		"description": "Puppeteer FileChooser"
	},
	"Puppeteer Dialog": {
		"prefix": ["ptrdialog","ptrdi"],
		"body": [
			"Dialog",
			"Dialog.accept",
			"Dialog.defaultValue",
			"Dialog.dismiss",
			"Dialog.message",
			"Dialog.type"
		],
		"description": "Puppeteer Dialog"
	},
	"Puppeteer ConsoleMessage": {
		"prefix": ["ptrconsolemessage","ptrconm"],
		"body": [
			"ConsoleMessage",
			"ConsoleMessage.(constructor)",
			"ConsoleMessage.args",
			"ConsoleMessage.location",
			"ConsoleMessage.stackTrace",
			"ConsoleMessage.text",
			"ConsoleMessage.type"
		],
		"description": "Puppeteer ConsoleMessage"
	},
	"Puppeteer Frame": {
		"prefix": ["ptrframe","ptrfr"],
		"body": [
			"Frame",
			"Frame.$",
			"Frame.$$",
			"Frame.$$eval",
			"Frame.$eval",
			"Frame.$x",
			"Frame.addScriptTag",
			"Frame.addStyleTag",
			"Frame.addStyleTag_1",
			"Frame.childFrames",
			"Frame.click",
			"Frame.content",
			"Frame.evaluate",
			"Frame.evaluateHandle",
			"Frame.focus",
			"Frame.goto",
			"Frame.hover",
			"Frame.isDetached",
			"Frame.isOOPFrame",
			"Frame.locator",
			"Frame.locator_1",
			"Frame.name",
			"Frame.page",
			"Frame.parentFrame",
			"Frame.select",
			"Frame.setContent",
			"Frame.tap",
			"Frame.title",
			"Frame.type",
			"Frame.url",
			"Frame.waitForDevicePrompt",
			"Frame.waitForFunction",
			"Frame.waitForNavigation",
			"Frame.waitForSelector",
			"Frame.waitForTimeout",
			"Frame.waitForXPath"
		],
		"description": "Puppeteer Frame"
	},
	"Puppeteer JSHandle": {
		"prefix": ["ptrjshandle","ptrjsh"],
		"body": [
			"JSHandle",
			"JSHandle.asElement",
			"JSHandle.dispose",
			"JSHandle.evaluate",
			"JSHandle.evaluateHandle",
			"JSHandle.getProperties",
			"JSHandle.getProperty",
			"JSHandle.getProperty_1",
			"JSHandle.getProperty_2",
			"JSHandle.jsonValue",
			"JSHandle.remoteObject",
			"JSHandle.toString"
		],
		"description": "Puppeteer JSHandle"
	},
	"Puppeteer ElementHandle": {
		"prefix": ["ptrelementhandle","ptrele"],
		"body": [
			"ElementHandle",
			"ElementHandle.$",
			"ElementHandle.$$",
			"ElementHandle.$$eval",
			"ElementHandle.$eval",
			"ElementHandle.$x",
			"ElementHandle.asElement",
			"ElementHandle.autofill",
			"ElementHandle.boundingBox",
			"ElementHandle.boxModel",
			"ElementHandle.click",
			"ElementHandle.clickablePoint",
			"ElementHandle.contentFrame",
			"ElementHandle.drag",
			"ElementHandle.dragAndDrop",
			"ElementHandle.dragEnter",
			"ElementHandle.dragOver",
			"ElementHandle.drop",
			"ElementHandle.focus",
			"ElementHandle.hover",
			"ElementHandle.isHidden",
			"ElementHandle.isIntersectingViewport",
			"ElementHandle.isVisible",
			"ElementHandle.press",
			"ElementHandle.screenshot",
			"ElementHandle.scrollIntoView",
			"ElementHandle.select",
			"ElementHandle.tap",
			"ElementHandle.toElement",
			"ElementHandle.touchEnd",
			"ElementHandle.touchMove",
			"ElementHandle.touchStart",
			"ElementHandle.type",
			"ElementHandle.uploadFile",
			"ElementHandle.waitForSelector",
			"ElementHandle.waitForXPath"
		],
		"description": "Puppeteer ElementHandle"
	},
	"Puppeteer HTTPRequest": {
		"prefix": ["ptrhttprequest","ptrhttpr"],
		"body": [
			"HTTPRequest",
			"HTTPRequest.abort",
			"HTTPRequest.abortErrorReason",
			"HTTPRequest.continue",
			"HTTPRequest.continueRequestOverrides",
			"HTTPRequest.enqueueInterceptAction",
			"HTTPRequest.failure",
			"HTTPRequest.finalizeInterceptions",
			"HTTPRequest.frame",
			"HTTPRequest.headers",
			"HTTPRequest.initiator",
			"HTTPRequest.interceptResolutionState",
			"HTTPRequest.isInterceptResolutionHandled",
			"HTTPRequest.isNavigationRequest",
			"HTTPRequest.method",
			"HTTPRequest.postData",
			"HTTPRequest.redirectChain",
			"HTTPRequest.resourceType",
			"HTTPRequest.respond",
			"HTTPRequest.response",
			"HTTPRequest.responseForRequest",
			"HTTPRequest.url"
		],
		"description": "Puppeteer HTTPRequest"
	},
	"Puppeteer HTTPResponse": {
		"prefix": ["ptrhttpresponse","ptrhttpres"],
		"body": [
			"HTTPResponse",
			"HTTPResponse.buffer",
			"HTTPResponse.frame",
			"HTTPResponse.fromCache",
			"HTTPResponse.fromServiceWorker",
			"HTTPResponse.headers",
			"HTTPResponse.json",
			"HTTPResponse.ok",
			"HTTPResponse.remoteAddress",
			"HTTPResponse.request",
			"HTTPResponse.securityDetails",
			"HTTPResponse.status",
			"HTTPResponse.statusText",
			"HTTPResponse.text",
			"HTTPResponse.timing",
			"HTTPResponse.url"
		],
		"description": "Puppeteer HTTPResponse"
	},
	"Puppeteer SecurityDetails": {
		"prefix": ["ptrsecuritydetails","ptrsede"],
		"body": [
			"SecurityDetails",
			"SecurityDetails.issuer",
			"SecurityDetails.protocol",
			"SecurityDetails.subjectAlternativeNames",
			"SecurityDetails.subjectName",
			"SecurityDetails.validFrom",
			"SecurityDetails.validTo"
		],
		"description": "Puppeteer SecurityDetails"
	},
	"Puppeteer Target": {
		"prefix": ["ptrparget","ptrtar"],
		"body": [
			"Target",
			"Target.browser",
			"Target.browserContext",
			"Target.createCDPSession",
			"Target.opener",
			"Target.page",
			"Target.type",
			"Target.url",
			"Target.worker"
		],
		"description": "Puppeteer Target"
	},
	"Puppeteer CDPSession": {
		"prefix": ["ptrcdpsession","ptrcdse"],
		"body": [
			"CDPSession",
			"CDPSession.connection",
			"CDPSession.detach",
			"CDPSession.id",
			"CDPSession.send"
		],
		"description": "Puppeteer CDPSession"
	},
	"Puppeteer Coverage": {
		"prefix": ["ptrcoverage","ptrcov"],
		"body": [
			"Coverage",
			"Coverage.(constructor)",
			"Coverage.startCSSCoverage",
			"Coverage.startJSCoverage",
			"Coverage.stopCSSCoverage",
			"Coverage.stopJSCoverage",
			"TimeoutError"
		],
		"description": "Puppeteer Coverage"
	},
	"Puppeteer EventEmitter": {
		"prefix": ["ptreventemitter","ptreve"],
		"body": [
			"EventEmitter",
			"EventEmitter.addListener",
			"EventEmitter.emit",
			"EventEmitter.listenerCount",
			"EventEmitter.off",
			"EventEmitter.on",
			"EventEmitter.once",
			"EventEmitter.removeAllListeners",
			"EventEmitter.removeListener"
		],
		"description": "Puppeteer EventEmitter"
	},
	"Puppeteer Other": {
		"prefix": ["ptrother","ptrot"],
		"body": [
			"Other",
			"ActionOptions",
			"ActionResult",
			"AutofillData",
			"Awaitable",
			"AwaitableIterable",
			"AwaitedLocator",
			"BoundingBox",
			"BoxModel",
			"BrowserConnectOptions",
			"BrowserContextEmittedEvents",
			"BrowserContextOptions",
			"BrowserEmittedEvents",
			"BrowserLaunchArgumentOptions",
			"ChromeReleaseChannel",
			"clearCustomQueryHandlers",
			"ClickOptions",
			"CommonEventEmitter",
			"Configuration",
			"connect",
			"Connection",
			"ConnectionTransport",
			"ConnectOptions",
			"ConsoleMessageLocation",
			"ConsoleMessageType",
			"ContinueRequestOverrides",
			"CoverageEntry",
			"Credentials",
			"CSSCoverage",
			"CSSCoverageOptions",
			"CustomError",
			"CustomQueryHandler",
			"customQueryHandlerNames",
			"DEFAULT_INTERCEPT_RESOLUTION_PRIORITY",
			"defaultArgs",
			"Device",
			"DeviceRequestPrompt",
			"DeviceRequestPromptDevice",
			"devices",
			"ElementFor",
			"ErrorCode",
			"errors",
			"EvaluateFunc",
			"EvaluateFuncWith",
			"EventType",
			"executablePath",
			"ExperimentsConfiguration",
			"FlattenHandle",
			"FrameAddScriptTagOptions",
			"FrameAddStyleTagOptions",
			"FrameWaitForFunctionOptions",
			"GeolocationOptions",
			"HandleFor",
			"HandleOr",
			"Handler",
			"InnerParams",
			"InterceptResolutionAction",
			"InterceptResolutionState",
			"InterceptResolutionStrategy",
			"InternalNetworkConditions",
			"JSCoverage",
			"JSCoverageEntry",
			"JSCoverageOptions",
			"KeyboardTypeOptions",
			"KeyDownOptions",
			"KeyInput",
			"KeyPressOptions",
			"KnownDevices",
			"launch",
			"LaunchOptions",
			"Locator",
			"LocatorClickOptions",
			"LocatorEmittedEvents",
			"LocatorEventObject",
			"LocatorOptions",
			"LocatorScrollOptions",
			"LowerCasePaperFormat",
			"Mapper",
			"MediaFeature",
			"Metrics",
			"MouseButton",
			"MouseClickOptions",
			"MouseMoveOptions",
			"MouseOptions",
			"MouseWheelOptions",
			"networkConditions",
			"NewDocumentScriptEvaluation",
			"NodeFor",
			"Offset",
			"PageEmittedEvents",
			"PageEventObject",
			"PaperFormat",
			"PDFMargin",
			"PDFOptions",
			"Permission",
			"Point",
			"PredefinedNetworkConditions",
			"Predicate",
			"Product",
			"ProductLauncher",
			"ProtocolError",
			"ProtocolLifeCycleEvent",
			"puppeteer",
			"PuppeteerErrors",
			"PuppeteerLaunchOptions",
			"PuppeteerLifeCycleEvent",
			"PuppeteerNodeLaunchOptions",
			"registerCustomQueryHandler",
			"RemoteAddress",
			"ResourceType",
			"ResponseForRequest",
			"ScreenshotClip",
			"ScreenshotOptions",
			"SerializedAXNode",
			"SnapshotOptions",
			"TargetFilterCallback",
			"TargetType",
			"TracingOptions",
			"trimCache",
			"unregisterCustomQueryHandler",
			"Viewport",
			"VisibilityOption",
			"WaitForOptions",
			"WaitForSelectorOptions",
			"WaitForTargetOptions",
			"WaitTimeoutOptions"
		],
		"description": "Puppeteer Other"
	}
}